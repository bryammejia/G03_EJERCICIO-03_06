package Figuras;


import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author USER
 */
public class Ventana1 extends javax.swing.JFrame implements MouseListener{

    /**
     * Creates new form Ventana1
     */
    public Ventana1() {
        initComponents();
        this.addMouseListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Figura: ");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Triangulo", "Rectangulo", "Circulo", "Estrella" }));

        jLabel2.setText("Colores");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Azul", "Amarillo", "Rojo", "Verde" }));

        jLabel3.setText("Anchoi: ");

        jLabel4.setText("Alto");

        jButton1.setText("Dibujar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Nuevo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 964, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 286, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(307, 307, 307)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(158, 158, 158)
                        .addComponent(jButton2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        figurasList.clear();
        this.repaint();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
                figura=new Figura();

                figura.setTipo(jComboBox1.getSelectedItem()+"");
                
                if(jComboBox2.getSelectedItem().equals("Verde"))
                {
                    figura.setColor(Color.GREEN);
                }else if (jComboBox2.getSelectedItem().equals("Azul"))
                {
                    figura.setColor(Color.BLUE);
                }else if(jComboBox2.getSelectedItem().equals("Amarillo"))
                {
                    figura.setColor(Color.YELLOW);
                }else if(jComboBox2.getSelectedItem().equals("Rojo"))
                {
                    figura.setColor(Color.RED);
                }
                figura.setAlto(Integer.valueOf(jTextField1.getText()));
                figura.setAncho(Integer.valueOf(jTextField2.getText()));
                figurasList.add(figura);
            }catch(Exception g)
            {
            }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana1().setVisible(true);
            }
        });
    }
    private static ArrayList<Figura> figurasList=new ArrayList<>();
    private Figura figura;
    private Point punto;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
    
    @Override
    public void paint(Graphics g)
    {
        super.paint(g);
        try{
            for(int i=0;i<figurasList.size();i++)
            {
                System.out.println("Si ingreso al for");
                Figura figura=figurasList.get(i);
                if(figura.getTipo().equals("Rectangulo"))
                {
                    g.setColor(figura.getColor());
                    int ancho=figura.getAncho();
                    int alto=figura.getAlto();
                    ancho+=figura.getPunto().x;
                    alto+=figura.getPunto().y;
                    int puntoX=(figura.getPunto().x)-((ancho-figura.getPunto().x)/2);
                    int puntoY=(figura.getPunto().y)-((alto-figura.getPunto().y)/2);
                    int anchoX=(ancho)-((ancho-figura.getPunto().x)/2);
                    int altoY=(alto)-((alto-figura.getPunto().y)/2);
                    g.fillRect(puntoX,puntoY,figura.getAlto(),figura.getAncho());
                }else if(figura.getTipo().equals("Triangulo"))
                {
                    g.setColor(figura.getColor());
                    int ancho=figura.getAncho();
                    int alto=figura.getAlto();
                    ancho+=figura.getPunto().x;
                    alto+=figura.getPunto().y;
                    
                    int puntoX=(figura.getPunto().x)-((ancho-figura.getPunto().x)/2);
                    int puntoY=(figura.getPunto().y)-((alto-figura.getPunto().y)/2);
                    int anchoX=(ancho)-((ancho-figura.getPunto().x)/2);
                    int altoY=(alto)-((alto-figura.getPunto().y)/2);
                    
                    int x1=puntoX+(anchoX-puntoX)/2;
                    int y1=puntoY;
                    int x2=puntoX;
                    int y2=altoY;
                    int x3=anchoX;
                    int y3=altoY;
                    
                    int[] puntosX={x1,x2,x3};
                    int[] puntosY={y1,y2,y3};
                    
                    g.fillPolygon(puntosX,puntosY,3);
                }else if(figura.getTipo().equals("Circulo"))
                {
                    g.setColor(figura.getColor());
                    
                    int ancho=figura.getAncho();
                    int alto=figura.getAlto();
                    
                    ancho+=figura.getPunto().x;
                    alto+=figura.getPunto().y;
                    
                    int puntoX=(figura.getPunto().x)-((ancho-figura.getPunto().x)/2);
                    int puntoY=(figura.getPunto().y)-((alto-figura.getPunto().y)/2);
                    int anchoX=(ancho)-((ancho-figura.getPunto().x)/2);
                    int altoY=(alto)-((alto-figura.getPunto().y)/2);
                    
                    g.fillOval(puntoX,puntoY,figura.getAncho(),figura.getAlto());
                }else if(figura.getTipo().equals("Estrella"))
                {
                    g.setColor(figura.getColor());
                    
                    int ancho=figura.getAncho();
                    int alto=figura.getAlto();
                    
                    ancho+=figura.getPunto().x;
                    alto+=figura.getPunto().y;
                    
                    int puntoX=(figura.getPunto().x)-((ancho-figura.getPunto().x)/2);
                    int puntoY=(figura.getPunto().y)-((alto-figura.getPunto().y)/2);
                    int anchoX=(ancho)-((ancho-figura.getPunto().x)/2);
                    int altoY=(alto)-((alto-figura.getPunto().y)/2);
                    
                    int x1=(puntoX+anchoX)/2;
                    int y1=puntoY;
                    
                    int x2=(puntoX)+(((anchoX-puntoX)/25)*9);
                    int y2=(puntoY)+((((altoY)-(puntoY))/5)*2);
                    
                    int x3=puntoX;
                    int y3=(puntoY)+((((altoY)-(puntoY))/5)*2);;
                    
                    int x4=(puntoX)+(((anchoX-puntoX)/25)*7);
                    int y4=(puntoY)+((((altoY)-(puntoY))/25)*16);
                   
                    int x5=((puntoX)+((anchoX-puntoX)/5));
                    int y5=altoY;
                    
                    int x6=(puntoX)+((anchoX-puntoX)/2);
                    int y6=(puntoY)+((((altoY)-(puntoY))/5)*4);
                    
                    int x7=(puntoX)+(((anchoX-puntoX)/5)*4);
                    int y7=altoY;
                    
                    int x8=(puntoX)+(((anchoX-puntoX)/25)*18);
                    int y8=(puntoY)+((((altoY)-(puntoY))/25)*16);
                    
                    int x9=anchoX;
                    int y9=(puntoY)+((((altoY)-(puntoY))/5)*2);;
                    
                    int x10=(puntoX)+(((anchoX-puntoX)/25)*16);
                    int y10=(puntoY)+((((altoY)-(puntoY))/5)*2);
                   
                    int[] puntosX={x1,x2,x3,x4,x5,x6,x7,x8,x9,x10};
                    int[] puntosY={y1,y2,y3,y4,y5,y6,y7,y8,y9,y10};
                    
                    g.fillPolygon(puntosX,puntosY,10);
                    
                }
            }
        }catch(Exception e)
        {
            System.out.println("La figura no especifica el tipo");
        }
        
        
        
    }
    @Override
    public void mouseClicked(MouseEvent e) {
        try{
            punto=new Point();
            punto=e.getPoint();
            System.out.println(punto);
            figurasList.get(figurasList.size()-1).setPunto(punto);
            this.repaint();
        }catch(Exception f)
        {
            System.out.println("La lista esta vacia");
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
        System.out.print("");
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        System.out.print("");
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        System.out.print("");
    }

    @Override
    public void mouseExited(MouseEvent e) {
        System.out.print("");
    }
}
