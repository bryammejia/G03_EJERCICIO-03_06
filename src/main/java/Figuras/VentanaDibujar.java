package Figuras;


import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author USER
 */
public class VentanaDibujar extends javax.swing.JFrame implements MouseListener{

    /**
     * Creates new form Ventana1
     */
    public VentanaDibujar() {
        initComponents();
        this.addMouseListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblFiguras = new javax.swing.JLabel();
        cboFigura = new javax.swing.JComboBox<>();
        lblColores = new javax.swing.JLabel();
        cboColores = new javax.swing.JComboBox<>();
        lblAncho = new javax.swing.JLabel();
        txtAncho = new javax.swing.JTextField();
        txtAlto = new javax.swing.JTextField();
        lblAlto = new javax.swing.JLabel();
        btnGraficar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        panelDibujar = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel1.setForeground(new java.awt.Color(102, 102, 255));

        lblFiguras.setFont(new java.awt.Font("Showcard Gothic", 0, 12)); // NOI18N
        lblFiguras.setForeground(new java.awt.Color(0, 0, 0));
        lblFiguras.setText("FIGURAS:");

        cboFigura.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        cboFigura.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Triangulo", "Rectangulo/Cuadrado", "Circulo", "Estrella" }));

        lblColores.setFont(new java.awt.Font("Showcard Gothic", 0, 12)); // NOI18N
        lblColores.setForeground(new java.awt.Color(0, 0, 0));
        lblColores.setText("COLORES:");

        cboColores.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        cboColores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Azul", "Amarillo", "Rojo", "Verde" }));

        lblAncho.setFont(new java.awt.Font("Showcard Gothic", 0, 12)); // NOI18N
        lblAncho.setForeground(new java.awt.Color(0, 0, 0));
        lblAncho.setText("ANCHO (X):");

        txtAncho.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N

        txtAlto.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N

        lblAlto.setFont(new java.awt.Font("Showcard Gothic", 0, 12)); // NOI18N
        lblAlto.setForeground(new java.awt.Color(0, 0, 0));
        lblAlto.setText("ALTO (Y):");

        btnGraficar.setFont(new java.awt.Font("Showcard Gothic", 0, 12)); // NOI18N
        btnGraficar.setText("GRAFICAR");
        btnGraficar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGraficarActionPerformed(evt);
            }
        });

        btnLimpiar.setFont(new java.awt.Font("Showcard Gothic", 0, 12)); // NOI18N
        btnLimpiar.setText("LIMPIAR");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        panelDibujar.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 153), new java.awt.Color(0, 0, 153)));

        javax.swing.GroupLayout panelDibujarLayout = new javax.swing.GroupLayout(panelDibujar);
        panelDibujar.setLayout(panelDibujarLayout);
        panelDibujarLayout.setHorizontalGroup(
            panelDibujarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 507, Short.MAX_VALUE)
        );
        panelDibujarLayout.setVerticalGroup(
            panelDibujarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 286, Short.MAX_VALUE)
        );

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Showcard Gothic", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("EDITOR  GRAFICO");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(panelDibujar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(lblFiguras)
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cboColores, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cboFigura, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addComponent(lblColores, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAncho, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAlto, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtAlto, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAncho, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGraficar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFiguras)
                    .addComponent(cboFigura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGraficar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAncho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAncho))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblColores)
                    .addComponent(cboColores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAlto)
                    .addComponent(txtAlto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 22, Short.MAX_VALUE)
                .addComponent(panelDibujar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        figurasList.clear();
        this.repaint();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnGraficarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGraficarActionPerformed
        try{
                figura=new Figuras();

                figura.setTipo(cboFigura.getSelectedItem()+"");
                
                if(cboColores.getSelectedItem().equals("Verde"))
                {
                    figura.setColor(Color.GREEN);
                }else if (cboColores.getSelectedItem().equals("Azul"))
                {
                    figura.setColor(Color.BLUE);
                }else if(cboColores.getSelectedItem().equals("Amarillo"))
                {
                    figura.setColor(Color.YELLOW);
                }else if(cboColores.getSelectedItem().equals("Rojo"))
                {
                    figura.setColor(Color.RED);
                }
                figura.setAlto(Integer.valueOf(txtAncho.getText()));
                figura.setAncho(Integer.valueOf(txtAlto.getText()));
                figurasList.add(figura);
            }catch(Exception g)
            {
            }
    }//GEN-LAST:event_btnGraficarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaDibujar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaDibujar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaDibujar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaDibujar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaDibujar().setVisible(true);
            }
        });
    }
    private static ArrayList<Figuras> figurasList=new ArrayList<>();
    private Figuras figura;
    private Point punto;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGraficar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JComboBox<String> cboColores;
    private javax.swing.JComboBox<String> cboFigura;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblAlto;
    private javax.swing.JLabel lblAncho;
    private javax.swing.JLabel lblColores;
    private javax.swing.JLabel lblFiguras;
    private javax.swing.JPanel panelDibujar;
    private javax.swing.JTextField txtAlto;
    private javax.swing.JTextField txtAncho;
    // End of variables declaration//GEN-END:variables
    
    @Override
    public void paint(Graphics g)
    {
        super.paint(g);
        try{
            for(int i=0;i<figurasList.size();i++)
            {
                System.out.println("Si ingreso al for");
                Figuras figura=figurasList.get(i);
                if(figura.getTipo().equals("Rectangulo/Cuadrado"))
                {
                    g.setColor(figura.getColor());
                    int ancho=figura.getAncho();
                    int alto=figura.getAlto();
                    ancho+=figura.getPunto().x;
                    alto+=figura.getPunto().y;
                    int puntoX=(figura.getPunto().x)-((ancho-figura.getPunto().x)/2);
                    int puntoY=(figura.getPunto().y)-((alto-figura.getPunto().y)/2);
                    int anchoX=(ancho)-((ancho-figura.getPunto().x)/2);
                    int altoY=(alto)-((alto-figura.getPunto().y)/2);
                    g.fillRect(puntoX,puntoY,figura.getAlto(),figura.getAncho());
                }else if(figura.getTipo().equals("Triangulo"))
                {
                    g.setColor(figura.getColor());
                    int ancho=figura.getAncho();
                    int alto=figura.getAlto();
                    ancho+=figura.getPunto().x;
                    alto+=figura.getPunto().y;
                    
                    int puntoX=(figura.getPunto().x)-((ancho-figura.getPunto().x)/2);
                    int puntoY=(figura.getPunto().y)-((alto-figura.getPunto().y)/2);
                    int anchoX=(ancho)-((ancho-figura.getPunto().x)/2);
                    int altoY=(alto)-((alto-figura.getPunto().y)/2);
                    
                    int x1=puntoX+(anchoX-puntoX)/2;
                    int y1=puntoY;
                    int x2=puntoX;
                    int y2=altoY;
                    int x3=anchoX;
                    int y3=altoY;
                    
                    int[] puntosX={x1,x2,x3};
                    int[] puntosY={y1,y2,y3};
                    
                    g.fillPolygon(puntosX,puntosY,3);
                }else if(figura.getTipo().equals("Circulo"))
                {
                    g.setColor(figura.getColor());
                    
                    int ancho=figura.getAncho();
                    int alto=figura.getAlto();
                    
                    ancho+=figura.getPunto().x;
                    alto+=figura.getPunto().y;
                    
                    int puntoX=(figura.getPunto().x)-((ancho-figura.getPunto().x)/2);
                    int puntoY=(figura.getPunto().y)-((alto-figura.getPunto().y)/2);
                    int anchoX=(ancho)-((ancho-figura.getPunto().x)/2);
                    int altoY=(alto)-((alto-figura.getPunto().y)/2);
                    
                    g.fillOval(puntoX,puntoY,figura.getAncho(),figura.getAlto());
                }else if(figura.getTipo().equals("Estrella"))
                {
                    g.setColor(figura.getColor());
                    
                    int ancho=figura.getAncho();
                    int alto=figura.getAlto();
                    
                    ancho+=figura.getPunto().x;
                    alto+=figura.getPunto().y;
                    
                    int puntoX=(figura.getPunto().x)-((ancho-figura.getPunto().x)/2);
                    int puntoY=(figura.getPunto().y)-((alto-figura.getPunto().y)/2);
                    int anchoX=(ancho)-((ancho-figura.getPunto().x)/2);
                    int altoY=(alto)-((alto-figura.getPunto().y)/2);
                    
                    int x1=(puntoX+anchoX)/2;
                    int y1=puntoY;
                    
                    int x2=(puntoX)+(((anchoX-puntoX)/25)*9);
                    int y2=(puntoY)+((((altoY)-(puntoY))/5)*2);
                    
                    int x3=puntoX;
                    int y3=(puntoY)+((((altoY)-(puntoY))/5)*2);;
                    
                    int x4=(puntoX)+(((anchoX-puntoX)/25)*7);
                    int y4=(puntoY)+((((altoY)-(puntoY))/25)*16);
                   
                    int x5=((puntoX)+((anchoX-puntoX)/5));
                    int y5=altoY;
                    
                    int x6=(puntoX)+((anchoX-puntoX)/2);
                    int y6=(puntoY)+((((altoY)-(puntoY))/5)*4);
                    
                    int x7=(puntoX)+(((anchoX-puntoX)/5)*4);
                    int y7=altoY;
                    
                    int x8=(puntoX)+(((anchoX-puntoX)/25)*18);
                    int y8=(puntoY)+((((altoY)-(puntoY))/25)*16);
                    
                    int x9=anchoX;
                    int y9=(puntoY)+((((altoY)-(puntoY))/5)*2);;
                    
                    int x10=(puntoX)+(((anchoX-puntoX)/25)*16);
                    int y10=(puntoY)+((((altoY)-(puntoY))/5)*2);
                   
                    int[] puntosX={x1,x2,x3,x4,x5,x6,x7,x8,x9,x10};
                    int[] puntosY={y1,y2,y3,y4,y5,y6,y7,y8,y9,y10};
                    
                    g.fillPolygon(puntosX,puntosY,10);
                    
                }
            }
        }catch(Exception e)
        {
            System.out.println("La figura no especifica el tipo");
        }
        
        
        
    }
    @Override
    public void mouseClicked(MouseEvent e) {
        try{
            punto=new Point();
            punto=e.getPoint();
            System.out.println(punto);
            figurasList.get(figurasList.size()-1).setPunto(punto);
            this.repaint();
        }catch(Exception f)
        {
            System.out.println("La lista esta vacia");
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
        System.out.print("");
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        System.out.print("");
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        System.out.print("");
    }

    @Override
    public void mouseExited(MouseEvent e) {
        System.out.print("");
    }
}
